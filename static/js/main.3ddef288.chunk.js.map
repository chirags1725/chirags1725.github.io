{"version":3,"sources":["Components/Navbar.js","Components/Portfolio.js","Components/Contact.js","Components/app-debug.apk","Components/Image/2.jpg","Components/Home.js","Components/Ads.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","useState","Change","setChange","window","addEventListener","scrollY","className","to","Portfolio","Contact","Home","Title","setTitle","ref","useRef","gsap","registerPlugin","ScrollTrigger","useEffect","current","yPercent","ease","scrollTrigger","trigger","scrub","src","logo","alt","width","style","position","borderRadius","Ads","App","background","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAGe,SAASA,EAAOC,GAC7B,MAA4BC,mBAAS,UAArC,mBAAOC,EAAP,KAAeC,EAAf,KAUA,OARAC,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,GACnBH,EAAU,iBAGVA,EAAU,aAIZ,mCACE,sBAAKI,UAAWL,EAAhB,UACE,qBAAKK,UAAU,QAAf,mHAIA,qBAAKA,UAAU,QAAf,SACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,aAAT,yBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,cAAT,0BAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,OAAT,6B,WCjCC,SAASC,IACtB,OACE,qCACE,qBAAKF,UAAS,SAEd,qBAAKA,UAAU,YAAf,SACE,sBAAMA,UAAU,QAAhB,4BCNO,SAASG,IACtB,OACE,qCACE,qBAAKH,UAAS,SAEd,qBAAKA,UAAU,YAAf,SACE,sBAAMA,UAAU,QAAhB,6BCNO,QCAA,MAA0B,8B,eCM1B,SAASI,IACtB,IAKA,EAA0BV,mBAAS,QAAnC,mBAAOW,EAAP,KAAcC,EAAd,KAEAT,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,GACnBO,EAAS,oBAETA,EAAS,WAIb,IAAMC,EAAMC,iBAAO,MAuGnB,OAtGAC,IAAKC,eAAeC,KAmBpBC,qBAAU,WACQL,EAAIM,QAqBpBJ,IAAKR,GAAG,UAAW,CACjBa,SAAU,IACVC,KAAM,OACNC,cAAe,CACbC,QAAS,OAGTC,OAAO,KAIXT,IAAKR,GAAG,OAAQ,CACda,UAAW,GACXC,KAAM,OACNC,cAAe,CACbC,QAAS,OAGTC,OAAO,OAGV,IAyCD,sBAAKlB,UAAU,QAAQO,IAAKA,EAA5B,UACE,qBAAKP,UAAS,SAEd,qBAAKA,UAAU,YAAf,SACE,sBAAMA,UAAU,QAAhB,SAAyBK,MAE3B,sBAAKL,UAAU,MAAf,UACE,qBACEmB,IAAKC,EACLpB,UAAU,SACVqB,IAAI,OACJC,MAAM,QACNC,MAnIM,CACZC,SAAU,WACVC,aAAc,UAmIV,qBAAKzB,UAAU,MAAf,6tBC5IO,SAAS0B,IACpB,MACI,WCkCOC,MA3Bf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAACnC,EAAD,CAAQoC,WAAW,SACnB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC1B,EAAD,MAEF,cAAC,IAAD,CAAO0B,KAAK,aAAZ,SACE,cAAC5B,EAAD,MAEF,cAAC,IAAD,CAAO4B,KAAK,cAAZ,SACE,cAAC3B,EAAD,MAEF,cAAC,IAAD,CAAO2B,KAAK,OAAZ,SACE,cAACJ,EAAD,MAEF,cAAC,IAAD,CAAOI,KAAK,IAAZ,SACE,iDChBGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ddef288.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  const [Change, setChange] = useState(\"navbar\");\r\n\r\n  window.addEventListener(\"scroll\", () => {\r\n    if (window.scrollY > 15) {\r\n      setChange(\"navbar change\");\r\n     \r\n    } else {\r\n      setChange(\"navbar\");\r\n    }\r\n  });\r\n  return (\r\n    <>\r\n      <div className={Change}>\r\n        <div className=\"quote\">\r\n          \"What you get by achieving your goals is not as important as what you\r\n          become by achieving your goals\"\r\n        </div>\r\n        <div className=\"links\">\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/portfolio\">Portfolio</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/contact_me\">Contact Me</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/ads\">Ads</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export default function Portfolio() {\r\n  return (\r\n    <>\r\n      <div className={`bg-1`}></div>\r\n\r\n      <div className=\"PageTitle\">\r\n        <span className=\"Title\">Portfolio</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export default function Contact() {\r\n  return (\r\n    <>\r\n      <div className={`bg-1`}></div>\r\n\r\n      <div className=\"PageTitle\">\r\n        <span className=\"Title\">Contact Me</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/app-debug.e1ce1f9f.apk\";","export default __webpack_public_path__ + \"static/media/2.5123bfb7.jpg\";","import { useState, useRef, useEffect } from \"react\";\r\nimport \"./app-debug.apk\";\r\nimport logo from \"./Image/2.jpg\";\r\nimport { gsap, Power4 } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\n\r\nexport default function Home() {\r\n  const style = {\r\n    position: \"relative\",\r\n    borderRadius: \"20px\",\r\n  };\r\n\r\n  const [Title, setTitle] = useState(\"Home\");\r\n\r\n  window.addEventListener(\"scroll\", () => {\r\n    if (window.scrollY > 15) {\r\n      setTitle(\"About the Author\");\r\n    } else {\r\n      setTitle(\"Home\");\r\n    }\r\n  });\r\n\r\n  const ref = useRef(null);\r\n  gsap.registerPlugin(ScrollTrigger);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const element = ref.current;\r\n  //   gsap.timeline(\r\n  //     {\r\n  //       scrollTrigger: {\r\n  //         trigger: element.querySelector(\".abt\"),\r\n  //         start: \"top center\",\r\n  //         end: \"bottom bottom\",\r\n  //         scrub: true,\r\n  //         markers:true,\r\n  //         // pin:true\r\n  //       },\r\n  //     }\r\n  //   ).from('.abt',{x:window.innerWidth * 1});\r\n  // }, []);\r\n      \r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    // gsap.fromTo(\r\n    //   element.querySelector(\".Author\"),\r\n    //   {\r\n    //     x:window.innerWidth * -1\r\n    //   },\r\n    //   {\r\n    //     x:0,\r\n    //     duration:20,\r\n    //     ease:{Power4},\r\n    //     scrollTrigger: {\r\n    //       trigger: element.querySelector(\".abt\"),\r\n    //       start: \"top center\",\r\n    //       end: \"bottom bottom\",\r\n    //       scrub: true,\r\n    //       markers:true,\r\n    //       pin:true\r\n    //     }\r\n    //   }\r\n    // );\r\n\r\n    gsap.to(\".Author\", {\r\n      yPercent: 100,\r\n      ease: \"none\",\r\n      scrollTrigger: {\r\n        trigger: \".abt\",\r\n        // start: \"top bottom\", // the default values\r\n        // end: \"bottom top\",\r\n        scrub: true,\r\n      }, \r\n    });\r\n    \r\n    gsap.to(\".txt\", {\r\n      yPercent: -50,\r\n      ease: \"none\",\r\n      scrollTrigger: {\r\n        trigger: \".abt\",\r\n        // start: \"top bottom\", // the default values\r\n        // end: \"bottom top\",\r\n        scrub: true\r\n      }, \r\n    });\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   const element = ref.current;\r\n  //   gsap.fromTo(\r\n  //     element.querySelector(\"#gsap-logo\"),\r\n  //     {\r\n  //       opacity: 0,\r\n  //       scale: 0.2,\r\n  //       y: -20\r\n  //     },\r\n  //     {\r\n  //       opacity: 1,\r\n  //       y: 0,\r\n  //       scale: 1,\r\n  //       duration: 1,\r\n  //       ease: \"none\",\r\n  //       scrollTrigger: {\r\n  //         trigger: element.querySelector(\".first\"),\r\n  //         start: \"top center\",\r\n  //         end: \"bottom top\",\r\n  //         scrub: true\r\n  //       }\r\n  //     }\r\n  //   );\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   const element = ref.current;\r\n  //   gsap.from(element.querySelector(\".line\"), {\r\n  //     scale: 0,\r\n  //     ease: \"none\",\r\n  //     scrollTrigger: {\r\n  //       trigger: element.querySelector(\".third\"),\r\n  //       scrub: true,\r\n  //       start: \"top bottom\",\r\n  //       end: \"top top\"\r\n  //     }\r\n  //   });\r\n  // }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"start\" ref={ref}>\r\n      <div className={`bg-1`}></div>\r\n\r\n      <div className=\"PageTitle\">\r\n        <span className=\"Title\">{Title}</span>\r\n      </div>\r\n      <div className=\"abt\">\r\n        <img\r\n          src={logo}\r\n          className=\"Author\"  \r\n          alt=\"logo\"\r\n          width=\"100px\"\r\n          style={style}\r\n        />\r\n        <div className=\"txt\">Glucose : Glucose is an aldohexose and is also known as dextrose.\r\n        Preparation of Glucose : (a) From sucrose (cane Sugar) : H 12 22 11 2 6\r\n        12 6 6 12 6 Sucrose Glu cos e Fructose C H O HO CH O CH O     (b)\r\n        From Starch : H 6 10 5 n 2 6 12 6 393 K 2 3 atm Starch Glu cose (C H O )\r\n        nH O nC H O      Structure of Glucose Open-Chain Structure :\r\n         'D' before the name of glucose represents the configuration whereas\r\n        '(+)' represents dextrorotatory nature of the molecule.  'D' before the\r\n        name of glucose represents the configuration whereas '(+)' represents\r\n        dextrorotatory nature of the molecule.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function Ads(){\r\n    return(\r\n        'ads here'\r\n    )\r\n}","import \"./App.css\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Portfolio from \"./Components/Portfolio\";\r\nimport Contact from \"./Components/Contact\";\r\nimport Home from \"./Components/Home\";\r\nimport Ads from \"./Components/Ads\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar background=\"show\"></Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/portfolio\">\r\n            <Portfolio />\r\n          </Route>\r\n          <Route path=\"/contact_me\">\r\n            <Contact />\r\n          </Route>\r\n          <Route path=\"/ads\">\r\n            <Ads />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <div>404</div>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}